{{- /*
This is a single-file Helm template that deploys:
  - PostgreSQL (required by Palmr)
  - Optionally, MinIO for S3-compatible storage (recommended) or you can disable it
  - Palmr API, using the Docker Hub image kyantech/palmr-api
  - Palmr App, using the Docker Hub image kyantech/palmr-app

Users can configure which storage backend to use. If .Values.minio.enabled is true,
MinIO will be deployed and Palmr API will be configured accordingly.
If false, it is assumed a local storage mechanism is used.
*/ -}}
{{- $fullname := .Release.Name }}

{{/* ------------------- PostgreSQL ------------------------ */}}
{{- if .Values.postgres.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $fullname }}-postgres-pvc
  labels:
    app: {{ $fullname }}-postgres
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.postgres.persistence.size }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullname }}-postgres
  labels:
    app: {{ $fullname }}-postgres
spec:
  replicas: {{ .Values.postgres.replicaCount }}
  selector:
    matchLabels:
      app: {{ $fullname }}-postgres
  template:
    metadata:
      labels:
        app: {{ $fullname }}-postgres
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image }}"
          imagePullPolicy: {{ .Values.postgres.imagePullPolicy }}
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "{{ .Values.postgres.username }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgres.password }}"
            - name: POSTGRES_DB
              value: "{{ .Values.postgres.db }}"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: {{ $fullname }}-postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $fullname }}-postgres
  labels:
    app: {{ $fullname }}-postgres
spec:
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
  selector:
    app: {{ $fullname }}-postgres
{{- end }}

{{/* ------------------- MinIO (Optional) ------------------------ */}}
{{- if .Values.minio.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $fullname }}-minio-pvc
  labels:
    app: {{ $fullname }}-minio
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.minio.persistence.size }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullname }}-minio
  labels:
    app: {{ $fullname }}-minio
spec:
  replicas: {{ .Values.minio.replicaCount }}
  selector:
    matchLabels:
      app: {{ $fullname }}-minio
  template:
    metadata:
      labels:
        app: {{ $fullname }}-minio
    spec:
      containers:
        - name: minio
          image: "{{ .Values.minio.image }}"
          imagePullPolicy: {{ .Values.minio.imagePullPolicy }}
          args:
            - "server"
            - "/data"
          ports:
            - containerPort: 9000
          env:
            - name: MINIO_ROOT_USER
              value: "{{ .Values.minio.rootUser }}"
            - name: MINIO_ROOT_PASSWORD
              value: "{{ .Values.minio.rootPassword }}"
          volumeMounts:
            - name: minio-storage
              mountPath: /data
      volumes:
        - name: minio-storage
          persistentVolumeClaim:
            claimName: {{ $fullname }}-minio-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $fullname }}-minio
  labels:
    app: {{ $fullname }}-minio
spec:
  ports:
    - name: minio
      port: 9000
      targetPort: 9000
  selector:
    app: {{ $fullname }}-minio
{{- end }}

{{/* ------------------- Palmr API ------------------------ */}}
{{- if .Values.palmr.api.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullname }}-palmr-api
  labels:
    app: {{ $fullname }}-palmr-api
spec:
  replicas: {{ .Values.palmr.api.replicaCount }}
  selector:
    matchLabels:
      app: {{ $fullname }}-palmr-api
  template:
    metadata:
      labels:
        app: {{ $fullname }}-palmr-api
    spec:
      containers:
        - name: palmr-api
          image: "{{ .Values.palmr.api.image }}"
          imagePullPolicy: {{ .Values.palmr.api.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.palmr.api.port }}
          env:
            - name: DATABASE_URL
              value: "postgres://{{ .Values.postgres.username }}:{{ .Values.postgres.password }}@{{ $fullname }}-postgres:5432/{{ .Values.postgres.db }}"
          {{- if .Values.minio.enabled }}
            - name: MINIO_ENDPOINT
              value: "http://{{ $fullname }}-minio:9000"
            - name: MINIO_ROOT_USER
              value: "{{ .Values.minio.rootUser }}"
            - name: MINIO_ROOT_PASSWORD
              value: "{{ .Values.minio.rootPassword }}"
          {{- else }}
            - name: STORAGE_TYPE
              value: "local"
          {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $fullname }}-palmr-api
  labels:
    app: {{ $fullname }}-palmr-api
spec:
  ports:
    - name: api
      port: {{ .Values.palmr.api.port }}
      targetPort: {{ .Values.palmr.api.port }}
  selector:
    app: {{ $fullname }}-palmr-api
{{- end }}

{{/* ------------------- Palmr App ------------------------ */}}
{{- if .Values.palmr.app.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullname }}-palmr-app
  labels:
    app: {{ $fullname }}-palmr-app
spec:
  replicas: {{ .Values.palmr.app.replicaCount }}
  selector:
    matchLabels:
      app: {{ $fullname }}-palmr-app
  template:
    metadata:
      labels:
        app: {{ $fullname }}-palmr-app
    spec:
      containers:
        - name: palmr-app
          image: "{{ .Values.palmr.app.image }}"
          imagePullPolicy: {{ .Values.palmr.app.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.palmr.app.port }}
          env:
            - name: API_URL
              value: "http://{{ $fullname }}-palmr-api:{{ .Values.palmr.api.port }}"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $fullname }}-palmr-app
  labels:
    app: {{ $fullname }}-palmr-app
spec:
  type: {{ .Values.palmr.app.service.type }}
  ports:
    - name: http
      port: {{ .Values.palmr.app.service.port }}
      targetPort: {{ .Values.palmr.app.port }}
  selector:
    app: {{ $fullname }}-palmr-app
{{- end }}
